import { Request } from 'express';
import { Model } from 'mongoose';
import { UserDocument } from '../../entities/users.entity';
import { CgOrderDocument } from '../../entities/Silver/cgOrder';
import { RoOrderDocument } from '../../entities/Silver/roOrder';
import { CgInventoryDocument } from '../../entities/Silver/cgInventory';
import { RoInventoryDocument } from '../../entities/Silver/roInventory';
import { SilverProduct, SilverProductDocument } from '../../entities/Silver/silverProductMaster';
import { SilverCategoryDocument } from '../../entities/Silver/silverCategory.entity';
import { SilverSubcategoryDocument } from '../../entities/Silver/silverSubCategory';
import { CgConsumptionDocument } from '../../entities/Silver/cgConsumption';
import { RoConsumptionDocument } from '../../entities/Silver/roConsumption';
import { SilverBrandDocument } from '../../entities/Silver/silverBrand.entity';
import { SilverGroupDocument } from '../../entities/Silver/silverGroup.entity';
import { SilverUnitDocument } from '../../entities/Silver/silverUnit.entity';
import { SearchDto } from 'src/dto/pagination-dto';
import { FilterPaginationProductDto } from 'src/dto/product-dto';
import { GetProductInfoDto } from '../../Silver/silver-product/dto/response-product.dto';
import { CreateProductDto, ImportProductDto, StatusProductDto, UpdateProductDto } from '../../Silver/silver-product/dto/request-product.dto';
export declare class SilverProductsService {
    private productModel;
    private categoryModel;
    private userModel;
    private cgInventoryModel;
    private roInventoryModel;
    private cgOrderModel;
    private roOrderModel;
    private cgConsumptionModel;
    private roConsumptionModel;
    private subcategoryModel;
    private brandModel;
    private groupModel;
    private unitModel;
    constructor(productModel: Model<SilverProductDocument>, categoryModel: Model<SilverCategoryDocument>, userModel: Model<UserDocument>, cgInventoryModel: Model<CgInventoryDocument>, roInventoryModel: Model<RoInventoryDocument>, cgOrderModel: Model<CgOrderDocument>, roOrderModel: Model<RoOrderDocument>, cgConsumptionModel: Model<CgConsumptionDocument>, roConsumptionModel: Model<RoConsumptionDocument>, subcategoryModel: Model<SilverSubcategoryDocument>, brandModel: Model<SilverBrandDocument>, groupModel: Model<SilverGroupDocument>, unitModel: Model<SilverUnitDocument>);
    createProduct(createProductDto: CreateProductDto, req: Request): Promise<GetProductInfoDto>;
    getAllProduct(paginationDto: FilterPaginationProductDto, req: Request): Promise<any>;
    getProductInfo(id: string): Promise<GetProductInfoDto>;
    UpdateProducts(id: string, updateProductDto: UpdateProductDto): Promise<SilverProduct>;
    deleteProduct(id: string): Promise<SilverProduct>;
    updateStatus(id: string, statusProductDto: StatusProductDto): Promise<SilverProduct>;
    importProducts(createProductDto: ImportProductDto[]): Promise<any>;
    getProductDropDown(searchDto: SearchDto, req: Request): Promise<any>;
}
